# Generated by Django 3.2.3 on 2023-09-21 20:18

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранный рецепт',
                'verbose_name_plural': 'Избранные рецепты',
                'ordering': ['-recipe'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование ингредиента')),
                ('measurement_unit', models.CharField(max_length=10, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='IngredientForRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(help_text='Введите количество ингредиента', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Значение не может быть меньше нуля'), django.core.validators.MaxValueValidator(limit_value=9999, message='Введите значение не более 100000')], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Ингредиент для рецепта',
                'verbose_name_plural': 'Ингредиенты для рецепта',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название рецепта', max_length=128, verbose_name='Название рецепта')),
                ('image', models.ImageField(help_text='Добавьте фото блюда', upload_to='recipes/media/', verbose_name='Фото блюда')),
                ('text', models.CharField(help_text='Кратко опишите рецепт, либо процесс приготовления', max_length=512, verbose_name='Описание рецепта')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Введите время приготовления в минутах', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Значение не может быть меньше 1.'), django.core.validators.MaxValueValidator(limit_value=400, message='Значение не может быть больше 400.')], verbose_name='Время приготовления')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации рецепта')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=500, null=True, verbose_name='Комментарий к списку покупок')),
            ],
            options={
                'verbose_name': 'Списки покупок',
                'ordering': ['-recipe'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название тэга', max_length=30, unique=True, verbose_name='Название тэга')),
                ('color', models.CharField(help_text='Введите цвет тэга в формате HEX-Кода например #49B64E', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Значение "%(value)s", не является HEX-значением, введите значение в формате #AAFF09', regex='^#(?:[0-9a-fA-F]{3}){1,2}$')], verbose_name='Цвет тэга')),
                ('slug', models.SlugField(blank=True, help_text='Введите короткий адрес(не более 15 символов)', max_length=15, null=True, unique=True, verbose_name='Адрес тэга')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
        ),
    ]
